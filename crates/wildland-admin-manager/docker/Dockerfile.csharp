FROM debian:testing-slim

# Run with:
#
# docker-compose -f wildland-admin-manager/docker/docker-compose.yml run --rm wildland-sdk-csharp

ENV ADMIN_MANAGER_PATH=/wildland-core/crates/wildland-admin-manager
ENV TARGET=/wildland-core/target/debug/
ENV CC=g++
ENV CSHARP_COMPILER=mcs

RUN apt-get -qy update && apt-get install -y swig mono-mcs g++

RUN mkdir -p /wildland-core/
WORKDIR /wildland-core

# Copy from base image instead of building new image on top of it to avoid reinstalling packages after source code changes
COPY --from=wildland-sdk-base ${ADMIN_MANAGER_PATH}/_generated_cpp ./_generated_cpp
COPY --from=wildland-sdk-base ${ADMIN_MANAGER_PATH}/_generated_swift ./_generated_swift
COPY --from=wildland-sdk-base ${TARGET}/libwildland_admin_manager.a ./lib/
COPY crates/wildland-admin-manager/wildland.i ./

RUN mkdir -p _generated_csharp \
    && swig -csharp -c++ -w516,503,476,302 -outdir _generated_csharp wildland.i \
    && ${CC} -fpermissive -shared -fPIC --std=c++14 -w \
    wildland_wrap.cxx \
    -L lib \
    -I_generated_cpp \
    -I_generated_swift \
    -I_generated_swift/ffi_swift \
    -lwildland_admin_manager \
    -o _generated_csharp/libwildland.so

COPY test/ffi/test.cs ./_generated_csharp
RUN cd _generated_csharp \
    && ${CSHARP_COMPILER} -out:test.exe *.cs

# Run the test. If everything was completed successfully, `echo $?` should return `0` exit code.

CMD ["mono", "_generated_csharp/test.exe"]
