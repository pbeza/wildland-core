[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"

[tasks.clippy]
args          = ["clippy", "--all-targets", "--", "-D", "warnings"]
command       = "cargo"
install_crate = "clippy"
toolchain     = "nightly"

[tasks.format]
args          = ["fmt"]
command       = "cargo"
install_crate = "rustfmt"
toolchain     = "nightly"

[tasks.format-check]
args          = ["fmt", "--", "--check"]
command       = "cargo"
install_crate = "rustfmt"
toolchain     = "nightly"

[tasks.bindings-linux]
args        = ["build", "--package", "wildland-cargo-lib", "--features", "bindings", "--target", "x86_64-unknown-linux-gnu"]
command     = "cargo"
description = "Build Cargo bindings for x86_64 linux"

[tasks.lld-docs]
args        = ["doc", "--target-dir", ".docs/lld", "--all-features", "--no-deps"]
category    = "Documentation"
command     = "cargo"
description = "Generate Low Level (ie. rust) Documentation for entire Wildland Core workspace"
workspace   = false

[tasks.deny-licenses]
args          = ["deny", "check", "licenses"]
command       = "cargo"
description   = "check OSS licenses"
install_crate = "cargo-deny"

[tasks.clippy-fix]
args		= ['clippy', "--all-targets", "--fix", "--allow-no-vcs", "--", "-D", "warnings"]
command		= "cargo"
toolchain     = "nightly"
install_crate = "clippy"
env = { "__CARGO_FIX_YOLO" = "1" }

[tasks.code-fix]
run_task = { name = ["clippy-fix", "format"] }

# +----------------+
# | DOCKER HELPERS |
# +----------------+

[tasks.docker]
private = false
extend = "subcommand"
env = { "SUBCOMMAND_PREFIX" = "docker" }
workspace = false

[tasks.subcommand]
private = true
script = '''
#!@duckscript

cm_run_task ${SUBCOMMAND_PREFIX}_${1}
'''

[tasks.docker_redis-start]
private = true
command = "docker"
args = ["run", "-d", "--rm", "--publish=6379:6379", "--name=cargoredis", "redis"]

[tasks.docker_redis-stop]
private = true
command = "docker"
args = ["stop", "cargoredis"]
